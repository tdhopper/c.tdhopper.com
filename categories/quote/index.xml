<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quotes on Tim Hopper</title><link>https://tdhopper.com/categories/quote/</link><description>Recent content in Quotes on Tim Hopper</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://tdhopper.com/categories/quote/index.xml" rel="self" type="application/rss+xml"/><item><title>Wrong Figures, Right Answers?</title><link>https://tdhopper.com/blog/wrong-figures/</link><pubDate>Tue, 29 May 2018 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/wrong-figures/</guid><description>&lt;blockquote>
&lt;p>On two occasions I have been asked, — &amp;lsquo;Pray, Mr. Babbage, if you put into the machine wrong figures, will the right answers come out?&amp;rsquo; In one case a member of the Upper, and in the other a member of the Lower, House [of British Parliament] put this question.&lt;/p>
&lt;p>I am not able rightly to apprehend the kind of confusion of ideas that could provoke such a question.&lt;/p>
&lt;/blockquote>
&lt;p>— Charles Babbage, &lt;em>Passages from the Life of a Philosopher&lt;/em> (1864)&lt;/p></description></item><item><title>I Basically Can't Hire People Who Don't Know Git</title><link>https://tdhopper.com/blog/data-scientists-at-work/</link><pubDate>Tue, 22 May 2018 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/data-scientists-at-work/</guid><description>&lt;p>In 2014, &lt;a class="link" href="https://twitter.com/seb_g" target="_blank" rel="noopener"
>Sebastian Gutierrez&lt;/a> published a collection of interviews entitled &lt;a class="link" href="https://amzn.to/2Lo0A7s" target="_blank" rel="noopener"
>Data Scientists at Work&lt;/a>. My friend and former boss Eric Jonas posted &lt;a class="link" href="http://ericjonas.com/datascientistsatwork.html" target="_blank" rel="noopener"
>his interview on his website&lt;/a>. It&amp;rsquo;s full of gems.&lt;/p>
&lt;p>On engineering skills required for data science work, Eric says,&lt;/p>
&lt;blockquote>
&lt;p>On the industry side, I think that the ability to do software engineering is something that is very important, but isn’t really taught. You don’t actually learn it as a computer science undergraduate, and you certainly don’t learn it as a graduate student. So for me it’s very important that someone has learned it somehow—either by themselves or from someone else. &lt;strong>I basically can’t hire people who don’t know Git.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>On someone trained in pure mathematics learning to analysis of real-world data, Eric says:&lt;/p>
&lt;blockquote>
&lt;p>&amp;hellip;data analysis is so much messier than actual math. I have friends who work on these topology-based approaches, and I’m like, “You realize these manifolds totally evaporate when you actually throw noise into the system. How do you think this is really going to play out here?” So I would much rather someone be computationally skilled. I’m willing to trade off what their Putnam score was for how many open source GitHub projects they’ve committed to in the past.&lt;/p>
&lt;/blockquote>
&lt;p>I tried to argue this same point in &lt;a class="link" href="https://tdhopper.com/how/" >an earlier post&lt;/a>.&lt;/p>
&lt;p>On applying academic research, Eric observes:&lt;/p>
&lt;blockquote>
&lt;p>For example, when I evaluate machine learning papers, what I am looking to find out is whether the technique worked or not. &lt;strong>This is something that the world needs to know—most papers don’t actually tell you whether the thing worked.&lt;/strong> It’s really infuriating because most papers will show five dataset examples and then show that they’re slightly better on two different metrics when comparing against something from 20 years ago. In academia, it’s fine. In industry, it’s infuriating, because you need to know what actually works and what doesn’t.&lt;/p>
&lt;/blockquote>
&lt;p>I have suggested before that we need a good website for sharing implementations of academic algorithms and providing a forum for discussion of whether or not the algorithm &lt;em>actually works&lt;/em>.&lt;/p>
&lt;p>I highly recommend reading Eric&amp;rsquo;s &lt;a class="link" href="http://ericjonas.com/datascientistsatwork.html" target="_blank" rel="noopener"
>full interview&lt;/a>.&lt;/p></description></item><item><title>George Washington's Struggle for Inbox Zero</title><link>https://tdhopper.com/blog/george-washington-inbox-zero/</link><pubDate>Tue, 06 Mar 2018 13:34:00 +0000</pubDate><guid>https://tdhopper.com/blog/george-washington-inbox-zero/</guid><description>&lt;img src="https://tdhopper.com/images/george-washington.png" alt="Featured image of post George Washington's Struggle for Inbox Zero" />&lt;p>&lt;a class="link" href="https://amzn.to/3e3NppS" target="_blank" rel="noopener"
>Ron Chernow&lt;/a> on George Washington&amp;rsquo;s struggle with
mail:&lt;/p>
&lt;blockquote>
&lt;p>Washington devoted far more time to the onerous task of draft letters than
leading men into battle. Running an embryonic government, he protested to
Congress that he and his aides &amp;ldquo;are confined from morn till eve, hearing and
answering the applications and letters of one and another,&amp;rdquo; leaving him with
&amp;ldquo;no hours for recreation.&amp;rdquo; He groaned at the huge stacks of correspondence
and felt besieged by supplicants for various favors. At times the enormous
quantity of paperwork must have seemed more daunting than British arms.&lt;/p>
&lt;/blockquote></description></item><item><title>Optimism is essential to scientific success</title><link>https://tdhopper.com/blog/optimism/</link><pubDate>Tue, 13 Feb 2018 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/optimism/</guid><description>&lt;blockquote>
&lt;p>I have always believed that scientific research is another domain where a form of optimism is essential to success: I have yet to meet a successful scientist who lacks the ability to exaggerate the importance of what he or she is doing, and I believe that someone who lacks a delusional sense of significance will wilt in the face of repeated experiences of multiple small failures and rare successes, the fate of most researchers.&lt;/p>
&lt;/blockquote>
&lt;p>— Daniel Kahneman, [Thinking, Fast and Slow](Thinking Fast and Slow)&lt;/p></description></item><item><title>Neal Ford on Companies Ignoring Developer Costs</title><link>https://tdhopper.com/blog/neal-ford-on-companies-ignoring-developer-costs/</link><pubDate>Mon, 16 Oct 2017 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/neal-ford-on-companies-ignoring-developer-costs/</guid><description>&lt;blockquote>
&lt;p>The downside of this is you have to have two production stacks&amp;hellip; which is kind of expensive, but it&amp;rsquo;s dirt cheap compared to amount of money people spend on developers hacking away at things that are making them crazy. This is one of those things that drives me crazy about companies&amp;hellip; We will gladly spend a million dollars in overtime in developers to sit and work on our antiquated infrastructure, but we won&amp;rsquo;t spend a thousand dollars to buy a new machine to make them not have to do do that.&lt;/p>
&lt;/blockquote>
&lt;p>— Neal Ford, &lt;a class="link" href="http://shop.oreilly.com/product/0636920020271.do" target="_blank" rel="noopener"
>&amp;ldquo;Automation&amp;rdquo;, &lt;em>Neal Ford on Agile Engineering Practices&lt;/em>&lt;/a>&lt;/p></description></item><item><title>Choice of the Name Dynamic Programming</title><link>https://tdhopper.com/blog/choice-of-the-name-dynamic-programming/</link><pubDate>Fri, 26 May 2017 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/choice-of-the-name-dynamic-programming/</guid><description>&lt;p>&lt;a class="link" href="http://smo.sogang.ac.kr/doc/dy_birth.pdf" target="_blank" rel="noopener"
>Richard Bellman quoted by Stuart Dreyfus&lt;/a> via &lt;a class="link" href="http://economics.gmu.edu/people/gjonesb" target="_blank" rel="noopener"
>Garrett Jones&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>I spent the Fall quarter (of 1950) at RAND. My first task was to find a name for multistage decision processes. “An interesting question is, ‘Where did the name, dynamic programming, come from?’ The 1950s were not good years for mathematical research.&lt;/p>
&lt;p>We had a very interesting gentleman in Washington named Wilson. He was Secretary of Defense, and he actually had a pathological fear and hatred of the word, research. I’m not using the term lightly; I’m using it precisely. His face would suffuse, he would turn red, and he would get violent if people used the term, research, in his presence. You can imagine how he felt, then, about the term, mathematical.&lt;/p>
&lt;p>The RAND Corporation was employed by the Air Force, and the Air Force had Wilson as its boss, essentially. Hence, I felt I had to do something to shield Wilson and the Air Force from the fact that I was really doing mathematics inside the RAND Corporation. What title, what name, could I choose? In the first place I was interested in planning, in decision making, in thinking. But planning, is not a good word for various reasons.&lt;/p>
&lt;p>I decided therefore to use the word, ‘programming.’ I wanted to get across the idea that this was dynamic, this was multistage, this was time-varying—I thought, let’s kill two birds with one stone. Let’s take a word that has an absolutely precise meaning, namely dynamic, in the classical physical sense. It also has a very interesting property as an adjective, and that is it’s impossible to use the word, dynamic, in a pejorative sense. Try thinking of some combination that will possibly give it a pejorative meaning. It’s impossible.
Thus, I thought dynamic programming was a good name. It was something not even a Congressman could object to. So I used it as an umbrella for my activities.&lt;/p>
&lt;/blockquote></description></item><item><title>Like most great mathematicians, he expects universal precision</title><link>https://tdhopper.com/blog/like-most-great-mathematicians-he-expects-universal-precision/</link><pubDate>Wed, 26 Apr 2017 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/like-most-great-mathematicians-he-expects-universal-precision/</guid><description>&lt;p>From the &lt;a class="link" href="http://amzn.to/2qe0hRp" target="_blank" rel="noopener"
>Autobiography of Benjamin Franklin&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://en.wikipedia.org/wiki/Thomas_Godfrey_%28inventor%29" target="_blank" rel="noopener"
>Thomas Godfrey&lt;/a>, a self-taught mathematician, great in his way, and afterward inventor of what is now called Hadley&amp;rsquo;s Quadrant. But he knew little out of his way, and was not a pleasing companion; as, like most great mathematicians I have met with, he expected universal precision in every-thing said, or was for ever denying or distinguishing upon trifles, to the disturbance of all conversation.&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;m a recovering Godfrey Precisionist.&lt;/p></description></item><item><title>Metawork is more interesting than work</title><link>https://tdhopper.com/blog/metawork-is-more-interesting-than-work/</link><pubDate>Fri, 14 Apr 2017 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/metawork-is-more-interesting-than-work/</guid><description>&lt;p>&lt;a class="link" href="http://www.se-radio.net/2017/04/se-radio-episode-287-success-skills-for-architects-with-neil-ford/" target="_blank" rel="noopener"
>This Software Engineering Radio interview&lt;/a> with Neal Ford on Success Skills for Architects is full of gems about building effective software.&lt;/p>
&lt;p>He talks a lot about how coders love to solve problems, and that love can lead them to invent interesting, but unnecessary, problems to solve. This is true.&lt;/p>
&lt;blockquote>
&lt;p>Metawork is more interesting than work. It&amp;rsquo;s so hard to get back to simplicity, because we love complicated little puzzles to solve, so we keep overengineering everything.&lt;/p>
&lt;/blockquote>
&lt;p>Anyone who&amp;rsquo;s developing software would benefit from listening.&lt;/p></description></item><item><title>Logistic Regression Rules Everything Around Me</title><link>https://tdhopper.com/blog/logistic-regression-rules-everything-around-me/</link><pubDate>Tue, 21 Feb 2017 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/logistic-regression-rules-everything-around-me/</guid><description>&lt;p>&lt;a class="link" href="https://twitter.com/fredbenenson" target="_blank" rel="noopener"
>Fred Benenson&lt;/a> spent 6 years doing data science at Kickstarter. When he left last year, he wrote a &lt;a class="link" href="https://hackernoon.com/on-to-the-next-2-271-days-309d6ba672d7" target="_blank" rel="noopener"
>fantastic recap&lt;/a> of his experience.&lt;/p>
&lt;p>His &amp;ldquo;list of things I&amp;rsquo;ve discovered over the years&amp;rdquo; is particularly good. Here are a few of the things that resonated with me:&lt;/p>
&lt;blockquote>
&lt;li> The more you can work with someone to help refine their question the easier it will be to answer
&lt;li> Conducting a randomized controlled experiment via an A/B test is always better than analyzing historical data
&lt;li> Metrics are crucial to the story a company tells itself; it is essential to honestly and rigorously define them
&lt;li> Good experimental design is difficult; don't allow a great testing framework to let you get lazy with it
&lt;li> Data science (A/B testing, etc.) can help you how to optimize for a particular outcome, but it will never tell you which particular outcome to optimize for
&lt;li> Always seek to record and attain data in its rawest form, whether you're instrumenting something yourself or retrieving it from an API
&lt;/blockquote>
&lt;p>I highly recommend reading &lt;a class="link" href="https://hackernoon.com/on-to-the-next-2-271-days-309d6ba672d7" target="_blank" rel="noopener"
>the whole post&lt;/a>.&lt;/p></description></item><item><title>The perils of thinkism</title><link>https://tdhopper.com/blog/the-perils-of-thinkism/</link><pubDate>Sat, 24 Dec 2016 15:01:00 +0000</pubDate><guid>https://tdhopper.com/blog/the-perils-of-thinkism/</guid><description>&lt;img src="https://tdhopper.com/images/reading.png" alt="Featured image of post The perils of thinkism" />&lt;p>From &lt;a class="link" href="https://lemire.me/blog/2016/12/20/what-is-a-useful-theory/" target="_blank" rel="noopener"
>Daniel Lemire&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>I was an adept, as a teenager and a young adult, of thinkism. Thinkism is the idea that intelligence alone can solve problems. I thought I was smart so that I could just sit down and solve important problems. One after the other. Whatever contributions I ended up making had little to do with sitting down and thinking hard… and much more to do with getting dirty.&lt;/p>
&lt;/blockquote></description></item><item><title>Quotes from Former Professors</title><link>https://tdhopper.com/blog/quotes-from-former-professors/</link><pubDate>Tue, 12 Jan 2016 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/quotes-from-former-professors/</guid><description>&lt;blockquote class="twitter-tweet" lang="en">&lt;p lang="en" dir="ltr">I&amp;#39;ll never forget the great words of one of my best math professors:&amp;#10;&amp;#10;&amp;quot;If all I wanted was the answer, I sure as hell wouldn&amp;#39;t ask you.&amp;quot;&lt;/p>&amp;mdash; Tim Hopper (@tdhopper) &lt;a href="https://twitter.com/tdhopper/status/410071644896382977">December 9, 2013&lt;/a>&lt;/blockquote>
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8">&lt;/script>
&lt;blockquote class="twitter-tweet" lang="en">&lt;p lang="en" dir="ltr">Another great former professor quote:&amp;#10;&amp;#10;&amp;quot;I&amp;#39;m not smarter than you. I can just recover from mistakes faster than you.&amp;quot;&lt;/p>&amp;mdash; Tim Hopper (@tdhopper) &lt;a href="https://twitter.com/tdhopper/status/410084681443323904">December 9, 2013&lt;/a>&lt;/blockquote>
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>I Love Twitter</title><link>https://tdhopper.com/blog/i-love-twitter/</link><pubDate>Mon, 07 Dec 2015 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/i-love-twitter/</guid><description>&lt;blockquote class="twitter-tweet" lang="en">&lt;p lang="en" dir="ltr">&lt;a href="https://twitter.com/tdhopper">@tdhopper&lt;/a> my father wrote his PhD on this question, and I believe his answer was &amp;quot;depends&amp;quot;&lt;/p>&amp;mdash; Fred Benenson (@fredbenenson) &lt;a href="https://twitter.com/fredbenenson/status/673926014406434816">December 7, 2015&lt;/a>&lt;/blockquote>
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>A Joke</title><link>https://tdhopper.com/blog/a-joke/</link><pubDate>Thu, 24 Sep 2015 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/a-joke/</guid><description>&lt;blockquote class="twitter-tweet" lang="en">&lt;p lang="en" dir="ltr">Even though I&amp;#39;ve been coding for 12 years, I&amp;#39;d still just consider myself a grammer.&lt;/p>&amp;mdash; Tim Hopper (@tdhopper) &lt;a href="https://twitter.com/tdhopper/status/531928033553563648">November 10, 2014&lt;/a>&lt;/blockquote>
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>Dealing with Outliers</title><link>https://tdhopper.com/blog/dealing-with-outliers/</link><pubDate>Tue, 08 Sep 2015 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/dealing-with-outliers/</guid><description>&lt;p>From &lt;a class="link" href="http://www.pnas.org/content/110/39/15746.full" target="_blank" rel="noopener"
>Testicular volume is inversely correlated with nurturing-related brain activity in human fathers&lt;/a> in PNAS:&lt;/p>
&lt;blockquote>
&lt;p>One participant&amp;rsquo;s testes volume measurement was excluded because his value was 2.8 SDs above the mean (mean = 38,064; SD = 11,183) and was more than 13,000 mm^3 larger than any recorded value found in the literature. Of the more than 1,500 healthy, age-matched men in these studies, the largest reported value was 56,000 mm^3, and this participant’s measurement was 69,736 mm^3.&lt;/p>
&lt;/blockquote></description></item><item><title>On Showing Your Work</title><link>https://tdhopper.com/blog/on-showing-your-work/</link><pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/on-showing-your-work/</guid><description>&lt;blockquote class="twitter-tweet" lang="en">&lt;p lang="en" dir="ltr">I&amp;#39;ll never forget the great words of one of my best math professors:&amp;#10;&amp;#10;&amp;quot;If all I wanted was the answer, I sure as hell wouldn&amp;#39;t ask you.&amp;quot;&lt;/p>&amp;mdash; Tim Hopper (@tdhopper) &lt;a href="https://twitter.com/tdhopper/status/410071644896382977">December 9, 2013&lt;/a>&lt;/blockquote>
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>A Programmer's Portfolio</title><link>https://tdhopper.com/blog/a-programmers-portfolio/</link><pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/a-programmers-portfolio/</guid><description>&lt;p>I am convinced that a programming student hoping to get a job in that field should be actively building a portfolio online. Turn those class projects, presentations, and reports into Github repositories or blog posts! I felt vindicated as I read this anecdote in &lt;a class="link" href="https://en.wikipedia.org/wiki/Peopleware:_Productive_Projects_and_Teams" target="_blank" rel="noopener"
>Peopleware&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>In the spring of 1979, while teaching together in western Canada,we got a call from a computer science professor at the local technical college. He proposed to stop by our hotel after class one evening and buy us beers in exchange for ideas. That&amp;rsquo;s the kind of offer we seldom turn down. What we learned from him that evening was almost certainly worth more than whatever he learned from us.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>The teacher was candid about what he needed to be judged a success in his work: He needed his students to get good job offers and lots of them. &amp;ldquo;A Harvard diploma is worth something in and of itself, but our diploma isn&amp;rsquo;t worth squat. If this year&amp;rsquo;s graduates don&amp;rsquo;t get hired fast, there are no students next year and I&amp;rsquo;m out of a job.&amp;rdquo; So he had developed a formula to make his graduates optimally attractive to the job market. Of course he taught them modern techniques for system construction, including structured analysis and design, data-driven design, information hiding, structured coding, walk throughs, and metrics. He also had them work on real applications for nearby companies and agencies. But the center piece of his formula was the portfolio that all students put together to show samples of their work.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>He described how his students had been coached to show off their portfolios as part of each interview:&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&amp;ldquo;I&amp;rsquo;ve brought along some samples of the kind of work I do. Here, for instance, is a subroutine in Pascal from one project and a set of COBOL paragraphs from another. As you can see in this portion, we use the loop-with-exit extension advocated by Knuth, but aside from that, it&amp;rsquo;s pure structured code, pretty much the sort of thing that your company standard calls for. And here is the design that this code was written from. The hierarchies and coupling analysis use Myers&amp;rsquo; notation. I designed all of this particular subsystem, and this one little section where we used some Orr methods because the data structure really imposed itself on the process structure. And these are the leveled data flow diagrams that makeup the guts of our specification, and the associated data dictionary. &amp;hellip;&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>In the years since, we&amp;rsquo;ve often heard more about that obscure technical college and those portfolios. We&amp;rsquo;ve met recruiters from as far away as Triangle Park, North Carolina, and Tampa, Florida,who regularly converge upon that distant Canadian campus for a shot at its graduates.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Of course, this was a clever scheme of the professor&amp;rsquo;s to give added allure to his graduates, but what struck us most that evening was the report that interviewers were always surprised by the portfolios. That meant they weren&amp;rsquo;t regularly requiring all candidates to arrive with portfolios. Yet why not? What could be more sensible than asking each candidate to bring along some samples of work to the interview?&lt;/p>
&lt;/blockquote></description></item><item><title>10x Engineering</title><link>https://tdhopper.com/blog/10x-engineering/</link><pubDate>Tue, 28 Jul 2015 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/10x-engineering/</guid><description>&lt;blockquote class="twitter-tweet" lang="en">&lt;p lang="en" dir="ltr">How to be a 10x engineer: Incur technical debt fast enough to appear 10x as productive as the ten engineers tasked with cleaning it up.&lt;/p>&amp;mdash; Brian Degenhardt (@bmdhacks) &lt;a href="https://twitter.com/bmdhacks/status/560949130999365633">January 29, 2015&lt;/a>&lt;/blockquote> &lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>Thinking at Work</title><link>https://tdhopper.com/blog/thinking-at-work/</link><pubDate>Wed, 22 Jul 2015 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/thinking-at-work/</guid><description>&lt;p>Having worked from home for the last few years, I have a hard time understanding how people get anything done in open-floor plan offices. I would be overwhelmed and frustrated by the noise and commotion.&lt;/p>
&lt;p>I assumed open-floor plans for software shops were a relatively new invention. However, I just started reading &lt;a class="link" href="https://en.wikipedia.org/wiki/Peopleware:_Productive_Projects_and_Teams" target="_blank" rel="noopener"
>Peopleware: Productive Projects and Teams&lt;/a>, first published in 1987, and discovered that the first third of the book rails against open floor plan offices. I particularly enjoyed this quote:&lt;/p>
&lt;blockquote>
&lt;p>In my years at Bell Labs, we worked in two-person offices. They were spacious, quiet, and the phones could be diverted. I shared my office with Wendl Thomis, who went on to build a small empire as an electric toy maker. In those days, he was working on the Electronic Switching System fault dictionary. The dictionary scheme relied upon the notion of n-space proximity, a concept that was hairy enough to challenge even Wendel&amp;rsquo;s powers of concentration. One afternoon, I was bent over a program listing while Wendl was staring into space, his feet propped up on his desk. Our boss came in and asked, &amp;ldquo;Wendl! What are you doing?&amp;rdquo; Wendl said, &amp;ldquo;I&amp;rsquo;m thinking.&amp;rdquo; And the boss said, &amp;ldquo;Can&amp;rsquo;t you do that at home?&amp;rdquo;&lt;/p>
&lt;p>The difference between that Bell Labs environment and a typical modern-day office plan is that in those quiet offices, one at least had the option of thinking on the job. In most of the office space we encounter today, there is enough noise and interruption to make any serious thinking virtually impossible. More is the shame: Your people bring their brains with them every morning. They could put them to work for you at no additional cost if only there were a small measure of peace and quiet in the workplace.&lt;/p>
&lt;/blockquote></description></item><item><title>The Incessant Commentary on Being Tall</title><link>https://tdhopper.com/blog/the-incessant-commentary-on-being-tall/</link><pubDate>Wed, 02 Oct 2013 00:00:00 +0000</pubDate><guid>https://tdhopper.com/blog/the-incessant-commentary-on-being-tall/</guid><description>&lt;p>Ralph Keyes, &lt;a class="link" href="http://www.ralphkeyes.com/height/" target="_blank" rel="noopener"
>The Height of Your Life&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>I&amp;rsquo;ve heard this sort of thing repeatedly from tall men. It&amp;rsquo;s not the incessant commentary about their height that is so annoying, it&amp;rsquo;s the stupefying boredom of it all. Were anyone to say something original or witty or different in any way, the constant chatter thrown their way might at least be entertaining. But soon after reaching their full height, tall people realize to their horror that the lifetime&amp;rsquo;s commentary to which they&amp;rsquo;ve been sentenced comes mostly from those with least to say.&lt;/p>
&lt;/blockquote></description></item></channel></rss>